name: Linux

on:
  push:
    branches: [ "*" ]
    paths-ignore:
      - 'docs/**'
      - STATUS
      - CHANGES
      - changes-entries/*
    tags:
      - 2.*
  pull_request:
    branches: [ "trunk", "2.4.x" ]
    paths-ignore:
      - 'docs/**'
      - STATUS
      - CHANGES
      - changes-entries/*

env:
  MARGS: "-j2"
  CFLAGS: "-g"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include: 
          # -------------------------------------------------------------------------
          - name: Empty APLOGNO() test
            env: |
              SKIP_TESTING=1
              TEST_LOGNO=1
          # -------------------------------------------------------------------------
          - name: Default
          # -------------------------------------------------------------------------
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NOTEST_CFLAGS: ${{ matrix.notest-cflags }}
      CONFIG: ${{ matrix.config }}
    name: ${{ matrix.name }}
    steps:
    - name: Set environment variables
      run: echo "${{ matrix.env }}" >> $GITHUB_ENV
    - name: apt refresh
      run: sudo apt-get -o Acquire::Retries=5 update
    - name: Install prerequisites
      run: sudo apt-get install -o Acquire::Retries=5
                    cpanminus libtool-bin libapr1-dev libaprutil1-dev
                    liblua5.3-dev libbrotli-dev libcurl4-openssl-dev     
                    libnghttp2-dev libjansson-dev libpcre2-dev gdb
                    perl-doc ${{ matrix.pkgs }}
    - uses: actions/checkout@v3
    - name: Cache APR build
      uses: actions/cache@v3
      env:
        cache-name: cache-apru
      with:
        path: ~/root
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('/home/runner/root/.key-*') }}
    - name: Cache CPAN modules
      uses: actions/cache@v3
      env:
        cache-name: cache-cpan
      with:
        path: ~/perl5
        key: ${{ runner.os }}-cpan-${{ env.cache-name }}-${{ hashFiles('/home/runner/perl5/.key') }}
    - name: Configure environment
      run: ./test/travis_before_linux.sh
      timeout-minutes: 15
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: config.log ${{ matrix.node-version }}
        path: |
          /home/runner/build/**/config.log
    - name: Build and test
      run: ./test/travis_run_linux.sh
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: error_log ${{ matrix.node-version }}
        path: test/perl-framework/t/logs/error_log
  containers:
    strategy:
      fail-fast: false
      matrix:
        container: ["quay.io/centos/centos:stream8", "quay.io/centos/centos:stream9",
                    "fedora:latest"]
    container:
      image: ${{ matrix.container }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NOTEST_CFLAGS: ${{ matrix.notest-cflags }}
      CONFIG: ${{ matrix.config }}
    steps:
    - name: Set environment variables
      run: echo "${{ matrix.env }}" >> $GITHUB_ENV
    - name: Install prerequisites
      run: dnf install libtool apr-devel apr-util-devel lua-devel openssl-devel
                        libjansson-devel libbrotli-devel libcurl-devel liblua-devel
                        /usr/bin/cpanm libnghttp2-devel pcre2-devel gdb perl-doc
    - uses: actions/checkout@v3
    - name: Configure environment
      run: ./test/travis_before_linux.sh
      timeout-minutes: 15
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: config.log ${{ matrix.node-version }}
        path: |
          /home/runner/build/**/config.log
    - name: Build and test
      run: ./test/travis_run_linux.sh
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: error_log ${{ matrix.node-version }}
        path: test/perl-framework/t/logs/error_log

