  *) mod_http: separating the HTTP semantic handling from the HTTP/1.x
     serialization (transcoding) handling by splitting filters.
     - new HEADERS bucket type that carries an optional status code
       and reason string, optional headers and notes tables.
       TRANSCODE filters are converting protocol version specific
       input to HEADERS buckets. And HEADERS output buckets into
       the wire format for the headers.
     - new module mod_http1 that has the new transcoding filters.
       also linked statically, just like mod_http.
     - "chunked" encoding handled in mod_http1 TRANSCODE filters.
     - Response header check and completion done in mod_http
       filter for all HTTP procotol versions.
     - ap_send_interim_response() now generates a HEADERS bucket
       and sends it through the protocol output filters of a request.
     - there are still several code locations in the server where
     - several "Transfer-Encoding" checks have been moved from
       generic HTTP handling into mod_http1.
       A new note AP_NOTE_REQUEST_BODY_INDETERMINATE has been
       introduced that, when present in r->notes, indicates that
       the length of a request body is not known.
     - mod_http1 sets AP_NOTE_REQUEST_BODY_INDETERMINATE on requests
       that carry a "Transfer-Encoding" header, even when
       "Content-Length" is present, as in HTTP/1.1 the former takes
       precendence.
     - mod_http2 sets AP_NOTE_REQUEST_BODY_INDETERMINATE only on
       requests that do not have a "Content-Length" and have not
       been announced as empty via an early EOS flag in the request
       header frames.
     - mod_proxy: passes trailers in both directions if not forced
       to HTTP/1.0.
